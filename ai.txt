Very good, but let's generate the full new file design for generic drawing of roads, water amd walls using the following approach:

*Format your response as a single code block containing multiple files, where each file follows this template:*

*// File: [relative/path/to/file.extension]*
*[complete file content]/*

*/ File: [next/file/path.extension]*
*[next file content]*

*Requirements:*
*- Start each file with exactly "// File: " followed by the filepath*
*- Include complete, functional file content*
*- No explanatory text between files*
*- Use relative paths from project root*

Use Tailwind CSS 4 for styling and do NOT use basic CSS. All components must be .tsx files that are Next.JS and React 19 compatible.

The following are the project dependencies:
  "dependencies": {
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-toggle": "^1.1.9",
    "@react-three/drei": "^10.6.1",
    "@react-three/fiber": "^9.3.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "drizzle-orm": "^0.44.4",
    "lucide-react": "^0.539.0",
    "nanoid": "^5.1.5",
    "next": "15.4.6",
    "pg": "^8.16.3",
    "react": "19.1.0",
    "react-dom": "19.1.0",
    "tailwind-merge": "^3.3.1",
    "three": "^0.179.1",
    "zustand": "^5.0.7"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@tailwindcss/postcss": "^4",
    "@types/node": "^20",
    "@types/pg": "^8.15.5",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "drizzle-kit": "^0.18.1",
    "eslint": "^9",
    "eslint-config-next": "15.4.6",
    "tailwindcss": "^4",
    "tw-animate-css": "^1.3.6",
    "typescript": "^5"
  }
}

The following UI elements and components are available: